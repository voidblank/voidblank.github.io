{"version":3,"sources":["webpack:///./src/assets/posts1/Java/2021-05-10-thread-pool-executor.js"],"names":["Object","defineProperty","__webpack_exports__","value","__webpack_require__","d","modifyTime","s","topMsg"],"mappings":"qDAAAA,OAAAC,eAAAC,EAAA,cAAAC,OAAA,IAAAC,EAAAC,EAAAH,EAAA,+BAAAI,IAAAF,EAAAC,EAAAH,EAAA,sBAAAK,IAAAH,EAAAC,EAAAH,EAAA,2BAAAM,IACO,IAAMF,EAAa,sBACbC,EAAI,or/CACJC,EAAS","file":"static/js/17.249a77abe0d9a7392dd8.js","sourcesContent":["/* eslint-disable */ \r\nexport const modifyTime = '2021-06-20 16:54:01'\r\nexport const s = '      <div class=\"mume markdown-preview  \">\\n      <h1 class=\"mume-header\" id=\"threadpoolexecutor\">ThreadPoolExecutor</h1>\\n\\n<ul>\\n<li><code>public class ThreadPoolExecutor extends AbstractExecutorService</code></li>\\n<li>&#x7EBF;&#x7A0B;&#x6C60;</li>\\n</ul>\\n<h2 class=\"mume-header\" id=\"%E5%B1%9E%E6%80%A7\">&#x5C5E;&#x6027;</h2>\\n\\n<h3 class=\"mume-header\" id=\"ctl\">ctl</h3>\\n\\n<ul>\\n<li><code>private final AtomicInteger ctl</code></li>\\n<li>&#x5B58;&#x50A8;&#x7EBF;&#x7A0B;&#x6C60;&#x72B6;&#x6001;&#x53CA;&#x6C60;&#x5185;&#x603B;&#x7684;&#x7EBF;&#x7A0B;&#x6570;&#x91CF;</li>\\n<li>&#x7EBF;&#x7A0B;&#x5B58;&#x50A8;&#x4E0A;&#x9650;<code>CAPACITY</code>:(1 &lt;&lt; COUNT_BITS) - 1(&#x5373;2<sup>29</sup> - 1)</li>\\n<li>COUNT_BITS:Integer.SIZE - 3(&#x5373;29)</li>\\n<li>&#x83B7;&#x53D6;&#x5F53;&#x524D;&#x7EBF;&#x7A0B;&#x6C60;&#x72B6;&#x6001;:<code>private static int runStateOf(int c) { return c &amp; ~CAPACITY; }</code></li>\\n<li>&#x83B7;&#x53D6;&#x5F53;&#x524D;&#x7EBF;&#x7A0B;&#x6C60;&#x4E2D;&#x7684;&#x7EBF;&#x7A0B;&#x603B;&#x6570;: <code>private static int workerCountOf(int c) { return c &amp; CAPACITY; }</code></li>\\n<li>&#x6839;&#x636E;&#x72B6;&#x6001;&#x548C;&#x7EBF;&#x7A0B;&#x6570;&#x83B7;&#x53D6;ctl&#x503C;(&#x4E00;&#x822C;&#x7528;&#x4E8E;&#x66F4;&#x65B0;):<code>private static int ctlOf(int rs, int wc) { return rs | wc; }</code></li>\\n</ul>\\n<h3 class=\"mume-header\" id=\"running\">RUNNING</h3>\\n\\n<ul>\\n<li><code>private static final int RUNNING = -1 &lt;&lt; COUNT_BITS;</code></li>\\n<li>&#x8868;&#x793A;&#x7EBF;&#x7A0B;&#x6C60;&#x5904;&#x5728;&#x8FD0;&#x884C;&#x72B6;&#x6001;,&#x63A5;&#x53D7;&#x65B0;&#x4EFB;&#x52A1;,&#x5904;&#x7406;&#x4EFB;&#x52A1;</li>\\n<li>&#x9AD8;&#x4E09;&#x4F4D;:111</li>\\n<li>&#x5F53;&#x8C03;&#x7528;<code>shutdown()</code>&#x65F6;&#x72B6;&#x6001;&#x53D8;&#x4E3A;<code>SHUTDOWN</code></li>\\n<li>&#x5F53;&#x8C03;&#x7528;<code>shutdownNow()</code>&#x65F6;&#x72B6;&#x6001;&#x53D8;&#x4E3A;<code>STOP</code></li>\\n</ul>\\n<h3 class=\"mume-header\" id=\"shutdown\">SHUTDOWN</h3>\\n\\n<ul>\\n<li><code>private static final int SHUTDOWN = 0 &lt;&lt; COUNT_BITS;</code></li>\\n<li>&#x8868;&#x793A;&#x7EBF;&#x7A0B;&#x6C60;&#x5904;&#x5728;&#x7ED3;&#x675F;&#x4EFB;&#x52A1;&#x7684;&#x72B6;&#x6001;,&#x4E0D;&#x518D;&#x63A5;&#x53D7;&#x65B0;&#x4EFB;&#x52A1;,&#x5904;&#x7406;&#x6C60;&#x4E2D;&#x5269;&#x4E0B;&#x7684;&#x4EFB;&#x52A1;</li>\\n<li>&#x9AD8;&#x4E09;&#x4F4D;:000</li>\\n<li>&#x5F53;&#x8C03;&#x7528;<code>shutdownNow()</code>&#x65F6;&#x72B6;&#x6001;&#x53D8;&#x4E3A;<code>STOP</code></li>\\n<li>&#x5F53;&#x963B;&#x585E;&#x961F;&#x5217;&#x548C;&#x7EBF;&#x7A0B;&#x6C60;&#x5747;&#x4E3A;&#x7A7A;&#x65F6;&#x53D8;&#x4E3A;<code>TIDYING</code></li>\\n</ul>\\n<h3 class=\"mume-header\" id=\"stop\">STOP</h3>\\n\\n<ul>\\n<li><code>private static final int STOP = 1 &lt;&lt; COUNT_BITS;</code></li>\\n<li>&#x8868;&#x793A;&#x7EBF;&#x7A0B;&#x6C60;&#x5904;&#x5728;&#x4E2D;&#x6B62;&#x72B6;&#x6001;,&#x4E0D;&#x518D;&#x63A5;&#x53D7;&#x65B0;&#x4EFB;&#x52A1;,&#x4E0D;&#x518D;&#x8FD0;&#x884C;&#x6C60;&#x4E2D;&#x672A;&#x8FD0;&#x884C;&#x7684;&#x4EFB;&#x52A1;,&#x7ACB;&#x523B;&#x7ED3;&#x675F;&#x6B63;&#x5728;&#x8FD0;&#x884C;&#x7684;&#x4EFB;&#x52A1;</li>\\n<li>&#x9AD8;&#x4E09;&#x4F4D;:001</li>\\n<li>&#x5F53;&#x7EBF;&#x7A0B;&#x6C60;&#x4E3A;&#x7A7A;&#x65F6;&#x53D8;&#x6210;<code>TIDYING</code></li>\\n</ul>\\n<h3 class=\"mume-header\" id=\"tidying\">TIDYING</h3>\\n\\n<ul>\\n<li><code>private static final int TIDYING = 2 &lt;&lt; COUNT_BITS;</code></li>\\n<li>&#x8868;&#x793A;&#x7EBF;&#x7A0B;&#x6C60;&#x5904;&#x5728;&#x6E05;&#x7406;&#x72B6;&#x6001;,&#x6240;&#x6709;&#x7684;&#x4EFB;&#x52A1;&#x90FD;&#x5DF2;&#x6267;&#x884C;&#x5B8C;(&#x5305;&#x62EC;&#x961F;&#x5217;&#x4E2D;&#x7684;&#x7B49;&#x5F85;&#x4EFB;&#x52A1;),&#x6B63;&#x5728;&#x6267;&#x884C;&#x7684;&#x4EFB;&#x52A1;&#x7684;&#x6570;&#x91CF;&#x4E3A;0,&#x5373;&#x5C06;&#x6267;&#x884C;<code>terminated()</code></li>\\n<li>&#x9AD8;&#x4E09;&#x4F4D;:010</li>\\n<li>&#x5F53;<code>terminated()</code>&#x94A9;&#x5B50;&#x8C03;&#x7528;&#x5B8C;&#x6210;&#x65F6;&#x53D8;&#x4E3A;<code>TERMINATED</code></li>\\n</ul>\\n<h3 class=\"mume-header\" id=\"terminated\">TERMINATED</h3>\\n\\n<ul>\\n<li><code>private static final int TERMINATED = 3 &lt;&lt; COUNT_BITS;</code></li>\\n<li>&#x8868;&#x793A;&#x7EBF;&#x7A0B;&#x6C60;&#x5904;&#x5728;&#x7EC8;&#x6B62;&#x72B6;&#x6001;,<code>terminated()</code>&#x6267;&#x884C;&#x5B8C;&#x6210;</li>\\n<li>&#x9AD8;&#x4E09;&#x4F4D;:011</li>\\n</ul>\\n<h3 class=\"mume-header\" id=\"workqueue\">workQueue</h3>\\n\\n<ul>\\n<li><code>private final BlockingQueue&lt;Runnable&gt; workQueue;</code></li>\\n<li>&#x4EFB;&#x52A1;&#x963B;&#x585E;&#x961F;&#x5217;,&#x5E38;&#x7528;&#x7684;:\\n<ul>\\n<li>&#x57FA;&#x4E8E;&#x6570;&#x7EC4;&#x7684;&#x6709;&#x754C;ArrayBlockingQueue</li>\\n<li>&#x57FA;&#x4E8E;&#x94FE;&#x8868;&#x7684;&#x65E0;&#x754C;LinkedBlockingQueue</li>\\n<li>&#x6700;&#x591A;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x7684;&#x540C;&#x6B65;&#x961F;&#x5217;SynchronousQueue</li>\\n<li>&#x4F18;&#x5148;&#x7EA7;&#x961F;&#x5217;PriorityBlockingQueue</li>\\n</ul>\\n</li>\\n</ul>\\n<h3 class=\"mume-header\" id=\"mainlock\">mainLock</h3>\\n\\n<ul>\\n<li><code>private final ReentrantLock mainLock = new ReentrantLock();</code></li>\\n<li>&#x5728;&#x5BF9;worker&#x8FDB;&#x884C;&#x5904;&#x7406;&#x6216;&#x5BF9;&#x7EBF;&#x7A0B;&#x6C60;&#x72B6;&#x6001;&#x8FDB;&#x884C;&#x6539;&#x53D8;&#x7684;&#x65F6;&#x5019;,&#x4F7F;&#x7528;&#x8BE5;&#x9501;</li>\\n</ul>\\n<h3 class=\"mume-header\" id=\"workers\">workers</h3>\\n\\n<ul>\\n<li><code>private final HashSet&lt;Worker&gt; workers = new HashSet&lt;Worker&gt;();</code></li>\\n<li>&#x5305;&#x542B;&#x7EBF;&#x7A0B;&#x6C60;&#x4E2D;&#x6240;&#x6709;&#x5DE5;&#x4F5C;&#x7EBF;&#x7A0B;&#x7684;set&#x96C6;&#x5408;,&#x5BF9;&#x8BE5;&#x96C6;&#x5408;&#x7684;&#x5904;&#x7406;&#x90FD;&#x9700;&#x8981;&#x4F7F;&#x7528;mainLock</li>\\n</ul>\\n<h3 class=\"mume-header\" id=\"termination\">termination</h3>\\n\\n<ul>\\n<li><code>private final Condition termination = mainLock.newCondition();</code></li>\\n<li>&#x7EBF;&#x7A0B;&#x6C60;&#x4F7F;&#x7528;&#x4E86;condition&#x6765;&#x914D;&#x5408;ReentrantLock&#x8FDB;&#x884C;wait&#x64CD;&#x4F5C;</li>\\n</ul>\\n<h3 class=\"mume-header\" id=\"largestpoolsize\">largestPoolSize</h3>\\n\\n<ul>\\n<li><code>private int largestPoolSize;</code></li>\\n<li>&#x7528;&#x4E8E;&#x8BB0;&#x5F55;&#x7EBF;&#x7A0B;&#x6C60;&#x53D6;&#x5F97;&#x7684;&#x6700;&#x5927;&#x5BB9;&#x91CF;&#x503C;,&#x5BF9;&#x8BE5;&#x503C;&#x8FDB;&#x884C;&#x4FEE;&#x6539;&#x7684;&#x65F6;&#x5019;&#x9700;&#x8981;&#x4F7F;&#x7528;mainLock</li>\\n</ul>\\n<h3 class=\"mume-header\" id=\"completedtaskcount\">completedTaskCount</h3>\\n\\n<ul>\\n<li><code>private long completedTaskCount;</code></li>\\n<li>&#x8BB0;&#x5F55;&#x5DF2;&#x5B8C;&#x6210;&#x7684;&#x4EFB;&#x52A1;&#x6570;,&#x66F4;&#x65B0;&#x9700;&#x8981;&#x4F7F;&#x7528;&#x8FC7;mainLock</li>\\n<li>&#x516C;&#x5F0F;:&#x539F;<code>completedTaskCount</code>(&#x9ED8;&#x8BA4;&#x4E3A;0) + &#x9000;&#x51FA;&#x7EBF;&#x7A0B;&#x7684;&#x5DF2;&#x5B8C;&#x6210;&#x4EFB;&#x52A1;&#x6570;<code>completedTasks</code></li>\\n</ul>\\n<h3 class=\"mume-header\" id=\"threadfactory\">threadFactory</h3>\\n\\n<ul>\\n<li><code>private volatile ThreadFactory threadFactory;</code></li>\\n<li>&#x7EBF;&#x7A0B;&#x6C60;&#x4E2D;&#x7684;&#x7EBF;&#x7A0B;&#x5DE5;&#x5382;,&#x65B0;&#x589E;worker&#x662F;&#x7531;&#x8BE5;&#x5DE5;&#x5382;&#x5B8C;&#x6210;&#x7684;,&#x9ED8;&#x8BA4;&#x4F7F;&#x7528;J.U.C&#x5305;&#x4E0B;&#x7684;<code>Executors</code>&#x63A5;&#x53E3;&#x7684;&#x5185;&#x90E8;&#x9759;&#x6001;&#x7C7B;<code>DefaultThreadFactory</code></li>\\n<li>ThreadFactory&#x63A5;&#x53E3;&#x89C4;&#x5B9A;&#x7684;<code>public Thread newThread(Runnable r);</code>&#x662F;&#x7EBF;&#x7A0B;&#x6C60;&#x4E2D;&#x65B0;&#x589E;&#x7EBF;&#x7A0B;&#x7684;&#x65B9;&#x6CD5;,&#x4E00;&#x822C;&#x6765;&#x8BF4;&#x4F1A;&#x5BF9;&#x65B0;&#x589E;&#x7684;&#x7EBF;&#x7A0B;&#x8FDB;&#x884C;&#x7EBF;&#x7A0B;&#x7EC4;&#x7684;&#x8BBE;&#x5B9A;&#x3001;&#x7EBF;&#x7A0B;&#x540D;&#x79F0;&#x7684;&#x8BBE;&#x5B9A;&#x3001;&#x7EBF;&#x7A0B;&#x4F18;&#x5148;&#x7EA7;&#x7684;&#x8BBE;&#x5B9A;&#x3001;&#x662F;&#x5426;&#x4E3A;&#x5B88;&#x62A4;&#x7EBF;&#x7A0B;&#x7684;&#x8BBE;&#x5B9A;</li>\\n</ul>\\n<h3 class=\"mume-header\" id=\"handler\">handler</h3>\\n\\n<ul>\\n<li><code>private volatile RejectedExecutionHandler handler;</code></li>\\n<li>&#x5F53;&#x7EBF;&#x7A0B;&#x6C60;&#x6EE1;&#x6216;&#x5904;&#x5728;<code>SHUTDOWN</code>&#x72B6;&#x6001;&#x65F6;,&#x6267;&#x884C;&#x7684;&#x62D2;&#x7EDD;&#x7B56;&#x7565;</li>\\n</ul>\\n<h3 class=\"mume-header\" id=\"keepalivetime\">keepAliveTime</h3>\\n\\n<ul>\\n<li><code>private volatile long keepAliveTime;</code></li>\\n<li>&#x95F2;&#x7F6E;&#x7EBF;&#x7A0B;&#x7684;&#x6700;&#x5927;&#x5B58;&#x6D3B;&#x65F6;&#x95F4;(&#x7EB3;&#x79D2;)</li>\\n<li>&#x5F53;&#x7EBF;&#x7A0B;&#x6570;&#x91CF;&#x8D85;&#x8FC7;<code>corePoolSize</code>&#x6216;<code>allowCoreThreadTimeOut</code>&#x4E3A;true&#x65F6;,&#x542F;&#x7528;&#x8BE5;&#x503C;,&#x5426;&#x5219;&#x4F1A;&#x5C06;&#x4E00;&#x76F4;&#x7B49;&#x5F85;</li>\\n</ul>\\n<h3 class=\"mume-header\" id=\"allowcorethreadtimeout\">allowCoreThreadTimeOut</h3>\\n\\n<ul>\\n<li><code>private volatile boolean allowCoreThreadTimeOut;</code></li>\\n<li>&#x4E3A;true&#x65F6;,&#x6838;&#x5FC3;&#x7EBF;&#x7A0B;&#x4F1A;&#x95F2;&#x7F6E;&#x6700;&#x591A;<code>keepAliveTime</code>&#x7EB3;&#x79D2;;&#x4E3A;false&#x65F6;,&#x6838;&#x5FC3;&#x7EBF;&#x7A0B;&#x4F1A;&#x4E0D;&#x4F1A;&#x56E0;&#x95F2;&#x7F6E;&#x8D85;&#x65F6;&#x800C;&#x88AB;&#x56DE;&#x6536;</li>\\n<li>&#x9ED8;&#x8BA4;&#x4E3A;false</li>\\n</ul>\\n<h3 class=\"mume-header\" id=\"corepoolsize\">corePoolSize</h3>\\n\\n<ul>\\n<li><code>private volatile int corePoolSize;</code></li>\\n<li>&#x6838;&#x5FC3;&#x7EBF;&#x7A0B;&#x6570;,&#x4FDD;&#x8BC1;&#x7EBF;&#x7A0B;&#x5B58;&#x6D3B;&#x7684;&#x6700;&#x5C0F;&#x6570;&#x91CF;</li>\\n<li>&#x5982;&#x679C;<code>allowCoreThreadTimeOut</code>&#x4E3A;true,&#x5219;&#x5B58;&#x6D3B;&#x7EBF;&#x7A0B;&#x7684;&#x6700;&#x5C0F;&#x6570;&#x91CF;&#x4E3A;0(&#x56E0;&#x4E3A;&#x8D85;&#x65F6;&#x95F2;&#x7F6E;&#x7EBF;&#x7A0B;&#x4F1A;&#x88AB;&#x56DE;&#x6536;)</li>\\n<li>&#x5F53;&#x4EFB;&#x52A1;&#x7EBF;&#x7A0B;&#x6570;&#x91CF;&#x5927;&#x4E8E;&#x8BE5;&#x503C;,&#x5219;&#x4F1A;&#x88AB;&#x653E;&#x5165;&#x963B;&#x585E;&#x961F;&#x5217;&#x4E2D;</li>\\n<li>&#x6700;&#x5C0F;&#x503C;&#x4E3A;0</li>\\n</ul>\\n<h3 class=\"mume-header\" id=\"maximumpoolsize\">maximumPoolSize</h3>\\n\\n<ul>\\n<li><code>private volatile int maximumPoolSize;</code></li>\\n<li>&#x7EBF;&#x7A0B;&#x6C60;&#x6700;&#x5927;&#x4E0A;&#x9650;,&#x65E0;&#x6CD5;&#x8D85;&#x8FC7;<code>CAPACITY</code></li>\\n</ul>\\n<h3 class=\"mume-header\" id=\"defaulthandler\">defaultHandler</h3>\\n\\n<ul>\\n<li><code>private static final RejectedExecutionHandler defaultHandler = new AbortPolicy();</code></li>\\n<li>&#x9ED8;&#x8BA4;&#x7684;&#x62D2;&#x7EDD;&#x7B56;&#x7565;(<code>handler</code>)</li>\\n</ul>\\n<h2 class=\"mume-header\" id=\"%E6%96%B9%E6%B3%95\">&#x65B9;&#x6CD5;</h2>\\n\\n<h3 class=\"mume-header\" id=\"isrunningint\">isRunning(int)</h3>\\n\\n<ul>\\n<li><code>private static boolean isRunning(int c) { return c &lt; SHUTDOWN; }</code></li>\\n<li>&#x5224;&#x65AD;&#x5F53;&#x524D;&#x72B6;&#x6001;&#x662F;&#x5426;&#x4E3A;RUNNING</li>\\n<li>&#x4E94;&#x79CD;&#x72B6;&#x6001;&#x95F4;&#x662F;&#x6709;&#x5927;&#x5C0F;&#x533A;&#x5206;&#x7684;,&#x4ECE;RUNNING&#x5230;TERMINATED&#x4F9D;&#x6B21;&#x589E;&#x5927;</li>\\n</ul>\\n<h3 class=\"mume-header\" id=\"advancerunstateint\">advanceRunState(int)</h3>\\n\\n<ul>\\n<li><code>private void advanceRunState(int targetState)</code></li>\\n<li>&#x6539;&#x53D8;&#x7EBF;&#x7A0B;&#x6C60;&#x72B6;&#x6001;,&#x5982;&#x679C;&#x5F53;&#x524D;&#x72B6;&#x6001;&#x6BD4;&#x8981;&#x6539;&#x53D8;&#x7684;&#x72B6;&#x6001;&#x5927;&#x5219;&#x76F4;&#x63A5;&#x9000;&#x51FA;</li>\\n<li>&#x53C2;&#x6570;&#x4E3A;&#x4E94;&#x4E2A;&#x72B6;&#x6001;&#x5E38;&#x91CF;</li>\\n</ul>\\n<h3 class=\"mume-header\" id=\"tryterminate\">tryTerminate()</h3>\\n\\n<ul>\\n<li><code>final void tryTerminate()</code></li>\\n<li>&#x68C0;&#x67E5;&#x662F;&#x5426;&#x9700;&#x8981;&#x6267;&#x884C;terminate,&#x5305;&#x62EC;:\\n<ul>\\n<li>&#x72B6;&#x6001;&#x4E0D;&#x4E3A;RUNNING</li>\\n<li>&#x72B6;&#x6001;&#x4E0D;&#x4E3A;TYDING&#x548C;TERMINATED</li>\\n<li>&#x72B6;&#x6001;&#x4E3A;STOP&#x6216;&#x72B6;&#x6001;&#x4E3A;SHUTDOWN&#x4E14;&#x963B;&#x585E;&#x961F;&#x5217;&#x4E3A;&#x7A7A;</li>\\n<li>&#x5F53;&#x524D;&#x6D3B;&#x8DC3;&#x7EBF;&#x7A0B;&#x6570;&#x4E3A;0</li>\\n<li>&#x5982;&#x679C;&#x4EE5;&#x4E0A;&#x4E0D;&#x6EE1;&#x8DB3;,&#x5219;&#x8DF3;&#x51FA;&#x65B9;&#x6CD5;</li>\\n<li>&#x5982;&#x679C;&#x4EE5;&#x4E0A;&#x6EE1;&#x8DB3;,&#x5219;&#x5C1D;&#x8BD5;&#x5C06;&#x7EBF;&#x7A0B;&#x6C60;&#x72B6;&#x6001;&#x53D8;&#x4E3A;TYDING,&#x7EBF;&#x7A0B;&#x6C60;&#x7F6E;&#x96F6;,&#x6210;&#x529F;&#x540E;&#x6267;&#x884C;<code>terminate()</code></li>\\n</ul>\\n</li>\\n<li>&#x5728;&#x6DFB;&#x52A0;worker&#x5931;&#x8D25;&#x3001;&#x79FB;&#x9664;worker&#x3001;&#x6267;&#x884C;shutdown()&#x3001;&#x6267;&#x884C;shutdownNow()&#x65F6;&#x8C03;&#x7528;</li>\\n</ul>\\n<h3 class=\"mume-header\" id=\"interruptworkers\">interruptWorkers()</h3>\\n\\n<ul>\\n<li><code>private void interruptWorkers()</code></li>\\n<li>&#x4E2D;&#x65AD;&#x6240;&#x6709;&#x7684;worker,&#x5B9E;&#x9645;&#x4E0A;&#x8C03;&#x7528;&#x7684;&#x662F;<code>Worker.interruptIfStarted()</code></li>\\n</ul>\\n<h3 class=\"mume-header\" id=\"interruptidleworkersboolean\">interruptIdleWorkers(boolean)</h3>\\n\\n<ul>\\n<li><code>private void interruptIdleWorkers(boolean onlyOne)</code></li>\\n<li>&#x4E2D;&#x65AD;&#x6240;&#x6709;&#x7684;&#x7A7A;&#x95F2;worker,&#x5982;&#x679C;&#x4F20;&#x5165;true&#x5219;&#x53EA;&#x4F1A;&#x68C0;&#x67E5;&#x7B2C;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;(&#x65E0;&#x8BBA;&#x4E2D;&#x65AD;&#x4E0E;&#x5426;)</li>\\n<li>&#x5B9E;&#x9645;&#x4E0A;&#x8C03;&#x7528;&#x7684;&#x662F;Worker&#x5185;&#x90E8;&#x53D8;&#x91CF;thread&#x7684;<code>interrupt()</code></li>\\n</ul>\\n<h3 class=\"mume-header\" id=\"isrunningorshutdownboolean\">isRunningOrShutdown(boolean)</h3>\\n\\n<ul>\\n<li><code>final boolean isRunningOrShutdown(boolean shutdownOK)</code></li>\\n<li>&#x68C0;&#x67E5;&#x72B6;&#x6001;&#x4E3A;RUNNING&#x8FD8;&#x662F;SHUTDOWN</li>\\n<li>&#x5F53;shutdownOK&#x4E3A;true&#x65F6;,&#x72B6;&#x6001;&#x4E3A;RUNNING&#x6216;&#x4E3A;SHUTDOWN&#x65F6;&#x90FD;&#x8FD4;&#x56DE;true</li>\\n<li>&#x5F53;shutdownOK&#x4E3A;false&#x65F6;,&#x53EA;&#x6709;&#x72B6;&#x6001;&#x4E3A;RUNNING&#x65F6;&#x624D;&#x8FD4;&#x56DE;true</li>\\n</ul>\\n<h3 class=\"mume-header\" id=\"addworkerrunnable-boolean\">addWorker(Runnable, boolean)</h3>\\n\\n<ul>\\n<li><code>private boolean addWorker(Runnable firstTask, boolean core)</code></li>\\n<li>&#x6DFB;&#x52A0;&#x65B0;&#x4EFB;&#x52A1;&#x5230;<code>workers</code></li>\\n<li>firstTask:&#x8981;&#x6267;&#x884C;&#x7684;&#x4EFB;&#x52A1;</li>\\n<li>core:&#x4E3A;true&#x65F6;,&#x6839;&#x636E;<code>corePoolSize</code>&#x6765;&#x5224;&#x65AD;&#x662F;&#x5426;&#x5C06;&#x4EFB;&#x52A1;&#x6267;&#x884C;;&#x4E3A;false&#x65F6;,&#x6839;&#x636E;<code>maximumPoolSize</code>&#x6765;&#x5224;&#x65AD;&#x662F;&#x5426;&#x5C06;&#x4EFB;&#x52A1;&#x6267;&#x884C;;&#x5982;&#x679C;&#x6D3B;&#x8DC3;&#x7EBF;&#x7A0B;&#x6570;&#x4E3A;0&#x6216;&#x963B;&#x585E;&#x961F;&#x5217;&#x5DF2;&#x6EE1;,&#x5219;&#x8BBE;&#x4E3A;false;&#x5426;&#x5219;&#x4E3A;true</li>\\n<li>&#x6D41;&#x7A0B;:</li>\\n</ul>\\n<pre data-role=\"codeBlock\" data-info=\"java\" class=\"language-java\"><span class=\"code-mark\">java</span><span class=\"token keyword\">private</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">addWorker</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Runnable</span> firstTask<span class=\"token punctuation\">,</span> <span class=\"token keyword\">boolean</span> core<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\\n        <span class=\"token comment\">// &#x5C06;&#x5927;&#x5FAA;&#x73AF;&#x6807;&#x8BC6;&#x4E3A;retry</span>\\n        retry<span class=\"token operator\">:</span>\\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\\n            <span class=\"token keyword\">int</span> c <span class=\"token operator\">=</span> ctl<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\\n            <span class=\"token keyword\">int</span> rs <span class=\"token operator\">=</span> <span class=\"token function\">runStateOf</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\\n\\n            <span class=\"token comment\">// &#x6821;&#x9A8C;&#x5F53;&#x524D;&#x7EBF;&#x7A0B;&#x6C60;&#x72B6;&#x6001;</span>\\n            <span class=\"token comment\">// &#x5FC5;&#x8981;&#x65F6;&#x68C0;&#x67E5;&#x662F;&#x5426;&#x4E3A;&#x7A7A;</span>\\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rs <span class=\"token operator\">&gt;=</span> SHUTDOWN <span class=\"token operator\">&amp;&amp;</span>\\n                <span class=\"token operator\">!</span> <span class=\"token punctuation\">(</span>rs <span class=\"token operator\">==</span> SHUTDOWN <span class=\"token operator\">&amp;&amp;</span>\\n                   firstTask <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span>\\n                   <span class=\"token operator\">!</span> workQueue<span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\\n                <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\\n\\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\\n              <span class=\"token comment\">// &#x5224;&#x65AD;&#x5F53;&#x524D;&#x7EBF;&#x7A0B;&#x6C60;&#x5185;&#x7684;&#x7EBF;&#x7A0B;&#x6570;&#x91CF;&#x662F;&#x5426;&#x8D85;&#x8FC7;&#x5F53;&#x524D;&#x5141;&#x8BB8;&#x7684;&#x9650;&#x5236;</span>\\n              <span class=\"token comment\">// core&#x8868;&#x793A;&#x963B;&#x585E;&#x961F;&#x5217;&#x662F;&#x5426;&#x5DF2;&#x6EE1;,&#x6EE1;&#x4E3A;false</span>\\n                <span class=\"token keyword\">int</span> wc <span class=\"token operator\">=</span> <span class=\"token function\">workerCountOf</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>wc <span class=\"token operator\">&gt;=</span> CAPACITY <span class=\"token operator\">||</span>\\n                    wc <span class=\"token operator\">&gt;=</span> <span class=\"token punctuation\">(</span>core <span class=\"token operator\">?</span> corePoolSize <span class=\"token operator\">:</span> maximumPoolSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\\n                    <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\\n                <span class=\"token comment\">// &#x672A;&#x6EE1;,&#x901A;&#x8FC7;CAS&#x589E;&#x52A0;1&#x4E2A;&#x7EBF;&#x7A0B;&#x6570;&#x91CF;</span>\\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">compareAndIncrementWorkerCount</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\\n                    <span class=\"token keyword\">break</span> retry<span class=\"token punctuation\">;</span>\\n                <span class=\"token comment\">// &#x589E;&#x52A0;&#x5931;&#x8D25;,&#x5219;&#x91CD;&#x65B0;&#x83B7;&#x53D6;ctl&#x5E76;&#x5224;&#x65AD;&#x7EBF;&#x7A0B;&#x6C60;&#x72B6;&#x6001;&#x662F;&#x5426;&#x53D1;&#x751F;&#x53D8;&#x5316;</span>\\n                c <span class=\"token operator\">=</span> ctl<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">runStateOf</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> rs<span class=\"token punctuation\">)</span>\\n                    <span class=\"token comment\">// &#x53D1;&#x751F;&#x53D8;&#x5316;&#x5219;&#x8DF3;&#x5230;&#x5927;&#x5FAA;&#x73AF;</span>\\n                    <span class=\"token keyword\">continue</span> retry<span class=\"token punctuation\">;</span>\\n            <span class=\"token punctuation\">}</span>\\n        <span class=\"token punctuation\">}</span>\\n\\n        <span class=\"token comment\">// &#x5224;&#x65AD;&#x4EFB;&#x52A1;&#x662F;&#x5426;&#x5F00;&#x59CB;</span>\\n        <span class=\"token keyword\">boolean</span> workerStarted <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\\n        <span class=\"token comment\">// &#x5224;&#x65AD;&#x4EFB;&#x52A1;&#x662F;&#x5426;&#x6DFB;&#x52A0;&#x6210;&#x529F;</span>\\n        <span class=\"token keyword\">boolean</span> workerAdded <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\\n        <span class=\"token class-name\">Worker</span> w <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\\n            <span class=\"token comment\">// &#x521B;&#x5EFA;&#x65B0;&#x4EFB;&#x52A1;&#x7684;worker&#x5BF9;&#x8C61;</span>\\n            w <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Worker</span><span class=\"token punctuation\">(</span>firstTask<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\\n            <span class=\"token keyword\">final</span> <span class=\"token class-name\">Thread</span> t <span class=\"token operator\">=</span> w<span class=\"token punctuation\">.</span>thread<span class=\"token punctuation\">;</span>\\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>t <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\\n                <span class=\"token keyword\">final</span> <span class=\"token class-name\">ReentrantLock</span> mainLock <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mainLock<span class=\"token punctuation\">;</span>\\n                mainLock<span class=\"token punctuation\">.</span><span class=\"token function\">lock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\\n                <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\\n                    <span class=\"token comment\">// &#x91CD;&#x65B0;&#x83B7;&#x53D6;&#x7EBF;&#x7A0B;&#x6C60;&#x72B6;&#x6001;,double-check</span>\\n                    <span class=\"token keyword\">int</span> rs <span class=\"token operator\">=</span> <span class=\"token function\">runStateOf</span><span class=\"token punctuation\">(</span>ctl<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\\n\\n                    <span class=\"token comment\">// &#x5224;&#x65AD;&#x7EBF;&#x7A0B;&#x6C60;&#x72B6;&#x6001;</span>\\n                    <span class=\"token comment\">// &#x5982;&#x679C;&#x4EFB;&#x52A1;&#x4E3A;null,&#x72B6;&#x6001;&#x53C8;&#x4E3A;SHUTDOWN,&#x8868;&#x793A;&#x5F00;&#x8F9F;&#x65B0;&#x7EBF;&#x7A0B;&#x6765;&#x6267;&#x884C;&#x963B;&#x585E;&#x961F;&#x5217;&#x4E2D;&#x7684;&#x4EFB;&#x52A1;</span>\\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rs <span class=\"token operator\">&lt;</span> SHUTDOWN <span class=\"token operator\">||</span>\\n                        <span class=\"token punctuation\">(</span>rs <span class=\"token operator\">==</span> SHUTDOWN <span class=\"token operator\">&amp;&amp;</span> firstTask <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span><span class=\"token function\">isAlive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// &#x5224;&#x65AD;&#x7EBF;&#x7A0B;&#x662F;&#x5426;&#x5B58;&#x6D3B;</span>\\n                            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IllegalThreadStateException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\\n                        <span class=\"token comment\">// &#x4E0A;&#x8FF0;&#x6761;&#x4EF6;&#x90FD;&#x6EE1;&#x8DB3;&#x4E86;,&#x5C06;worker&#x5BF9;&#x8C61;&#x52A0;&#x5230;workers&#x4E2D;</span>\\n                        workers<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\\n                        <span class=\"token comment\">// &#x68C0;&#x67E5;&#x7EBF;&#x7A0B;&#x6C60;&#x5BB9;&#x91CF;&#x662F;&#x5426;&#x8D85;&#x8FC7;&#x5386;&#x53F2;&#x6700;&#x5927;&#x503C;,&#x66F4;&#x65B0;&#x6700;&#x5927;&#x503C;</span>\\n                        <span class=\"token keyword\">int</span> s <span class=\"token operator\">=</span> workers<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>s <span class=\"token operator\">&gt;</span> largestPoolSize<span class=\"token punctuation\">)</span>\\n                            largestPoolSize <span class=\"token operator\">=</span> s<span class=\"token punctuation\">;</span>\\n                        <span class=\"token comment\">// &#x7EBF;&#x7A0B;&#x6DFB;&#x52A0;&#x6210;&#x529F;</span>\\n                        workerAdded <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\\n                    <span class=\"token punctuation\">}</span>\\n                <span class=\"token punctuation\">}</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">{</span>\\n                    mainLock<span class=\"token punctuation\">.</span><span class=\"token function\">unlock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\\n                <span class=\"token punctuation\">}</span>\\n                <span class=\"token comment\">// &#x7EBF;&#x7A0B;&#x6DFB;&#x52A0;&#x6210;&#x529F;&#x65F6;,&#x6267;&#x884C;&#x4EFB;&#x52A1;,&#x8BBE;&#x7F6E;&#x7EBF;&#x7A0B;&#x6210;&#x529F;&#x6267;&#x884C;</span>\\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>workerAdded<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\\n                    t<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\\n                    workerStarted <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\\n                <span class=\"token punctuation\">}</span>\\n            <span class=\"token punctuation\">}</span>\\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">{</span>\\n          <span class=\"token comment\">// &#x5982;&#x679C;&#x7EBF;&#x7A0B;&#x672A;&#x80FD;&#x6210;&#x529F;&#x6267;&#x884C;,&#x6267;&#x884C;&#x8BE5;&#x65B9;&#x6CD5;,&#x5177;&#x4F53;&#x770B;&#x4E0B;&#x9762;</span>\\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span> workerStarted<span class=\"token punctuation\">)</span>\\n                <span class=\"token function\">addWorkerFailed</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\\n        <span class=\"token punctuation\">}</span>\\n        <span class=\"token comment\">// &#x4EFB;&#x52A1;&#x6210;&#x529F;&#x6267;&#x884C;&#x624D;&#x4F1A;&#x8FD4;&#x56DE;true</span>\\n        <span class=\"token keyword\">return</span> workerStarted<span class=\"token punctuation\">;</span>\\n    <span class=\"token punctuation\">}</span>\\n</pre><h3 class=\"mume-header\" id=\"addworkerfailedwokrer\">addWorkerFailed(Wokrer)</h3>\\n\\n<ul>\\n<li><code>private void addWorkerFailed(Worker w)</code></li>\\n<li>&#x5F53;&#x6DFB;&#x52A0;&#x65B0;&#x4EFB;&#x52A1;&#x5931;&#x8D25;&#x65F6;,&#x8C03;&#x7528;&#x8BE5;&#x65B9;&#x6CD5;</li>\\n<li>&#x5C06;worker&#x4ECE;workers&#x4E2D;&#x79FB;&#x9664;,&#x5C06;ctl-1,&#x8C03;&#x7528;<code>tryTerminate()</code></li>\\n</ul>\\n<h3 class=\"mume-header\" id=\"runworkerworker\">runWorker(Worker)</h3>\\n\\n<ul>\\n<li><code>final void runWorker(Worker w)</code></li>\\n<li>Worker&#x7C7B;&#x7684;<code>run()</code>&#x7684;&#x6267;&#x884C;,&#x5373;&#x4F7F;&#x629B;&#x51FA;&#x4E86;&#x5F02;&#x5E38;&#x4E5F;&#x4F1A;&#x89C6;&#x4F5C;&#x4EFB;&#x52A1;&#x5B8C;&#x6210;,&#x672C;&#x8D28;&#x4E0A;&#x65F6;&#x8C03;&#x7528;&#x4E86;Worker&#x4E2D;&#x7684;&#x5185;&#x90E8;&#x6210;&#x5458;&#x53D8;&#x91CF;<code>Runnable firstTask</code>&#x7684;<code>run()</code></li>\\n</ul>\\n<h3 class=\"mume-header\" id=\"%E6%9E%84%E9%80%A0%E5%99%A8\">&#x6784;&#x9020;&#x5668;</h3>\\n\\n<ul>\\n<li>&#x53C2;&#x6570;:\\n<ul>\\n<li><code>int corePoolSize</code></li>\\n<li><code>int maximumPoolSize</code></li>\\n<li><code>long keepAliveTime</code></li>\\n<li><code>TimeUnit unit</code></li>\\n<li><code>BlockingQueue&lt;Runnable&gt; workQueue</code></li>\\n<li><code>ThreadFactory threadFactory</code>,&#x53EF;&#x9009;</li>\\n<li><code>RejectedExecutionHandler handler</code>,&#x53EF;&#x9009;</li>\\n</ul>\\n</li>\\n<li>&#x4F1A;&#x6821;&#x9A8C;&#x53C2;&#x6570;&#x7684;&#x503C;&#x7684;&#x6709;&#x6548;&#x6027;&#x548C;&#x662F;&#x5426;&#x5305;&#x542B;&#x7A7A;&#x6307;&#x9488;</li>\\n</ul>\\n<h3 class=\"mume-header\" id=\"executerunnable\">execute(Runnable)</h3>\\n\\n<pre data-role=\"codeBlock\" data-info=\"java\" class=\"language-java\"><span class=\"code-mark\">java</span><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Runnable</span> command<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\\n        <span class=\"token comment\">// &#x6821;&#x9A8C;&#x4EFB;&#x52A1;&#x662F;&#x5426;&#x4E3A;&#x7A7A;&#x6307;&#x9488;</span>\\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>command <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NullPointerException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\\n        <span class=\"token comment\">// &#x83B7;&#x53D6;&#x5F53;&#x524D;&#x7684;&#x4EFB;&#x52A1;&#x6570;&#x91CF;</span>\\n        <span class=\"token keyword\">int</span> c <span class=\"token operator\">=</span> ctl<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">workerCountOf</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> corePoolSize<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\\n            <span class=\"token comment\">// &#x5C0F;&#x4E8E;&#x6838;&#x5FC3;&#x7EBF;&#x7A0B;&#x6570;&#x5219;&#x76F4;&#x63A5;&#x5C1D;&#x8BD5;&#x6DFB;&#x52A0;&#x4EFB;&#x52A1;</span>\\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">addWorker</span><span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\\n                <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\\n            <span class=\"token comment\">// &#x6DFB;&#x52A0;&#x5931;&#x8D25;&#x7684;&#x8BDD;,&#x8BF4;&#x660E;&#x7EBF;&#x7A0B;&#x6C60;&#x72B6;&#x6001;&#x53EF;&#x80FD;&#x6709;&#x95EE;&#x9898;&#x6216;&#x4EFB;&#x52A1;&#x5DF2;&#x88AB;&#x6DFB;&#x52A0;&#x8FC7;</span>\\n            <span class=\"token comment\">// &#x91CD;&#x65B0;&#x83B7;&#x53D6;ctl</span>\\n            c <span class=\"token operator\">=</span> ctl<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\\n        <span class=\"token punctuation\">}</span>\\n        <span class=\"token comment\">// &#x5224;&#x65AD;&#x7EBF;&#x7A0B;&#x6C60;&#x72B6;&#x6001;&#x662F;&#x5426;&#x4E3A;RUNNING</span>\\n        <span class=\"token comment\">// &#x5982;&#x679C;&#x662F;,&#x5219;&#x5C06;&#x4EFB;&#x52A1;&#x52A0;&#x5165;&#x5230;&#x963B;&#x585E;&#x961F;&#x5217;&#x4E2D;</span>\\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isRunning</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> workQueue<span class=\"token punctuation\">.</span><span class=\"token function\">offer</span><span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\\n            <span class=\"token comment\">// &#x91CD;&#x65B0;&#x83B7;&#x53D6;ctl,&#x53EF;&#x80FD;&#x6B64;&#x65F6;&#x7EBF;&#x7A0B;&#x6C60;&#x7684;&#x72B6;&#x6001;&#x53D1;&#x751F;&#x4E86;&#x53D8;&#x5316;</span>\\n            <span class=\"token keyword\">int</span> recheck <span class=\"token operator\">=</span> ctl<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\\n            <span class=\"token comment\">// &#x5224;&#x65AD;&#x7EBF;&#x7A0B;&#x6C60;&#x72B6;&#x6001;,&#x5982;&#x679C;&#x72B6;&#x6001;&#x4E0D;&#x4E3A;RUNNING&#x5219;&#x5C1D;&#x8BD5;&#x5C06;&#x8BE5;&#x4EFB;&#x52A1;&#x4ECE;&#x961F;&#x5217;&#x4E2D;&#x79FB;&#x9664;</span>\\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span> <span class=\"token function\">isRunning</span><span class=\"token punctuation\">(</span>recheck<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\\n                <span class=\"token comment\">// &#x6267;&#x884C;&#x62D2;&#x7EDD;&#x7B56;&#x7565;</span>\\n                <span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\\n            <span class=\"token comment\">// &#x4E0A;&#x8FF0;&#x6761;&#x4EF6;&#x4E0D;&#x6210;&#x7ACB;,&#x5219;&#x5224;&#x65AD;&#x7EBF;&#x7A0B;&#x6C60;&#x662F;&#x5426;&#x4E3A;&#x7A7A;</span>\\n            <span class=\"token comment\">// &#x4E3A;&#x7A7A;&#x5219;&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;&#x7A7A;&#x7EBF;&#x7A0B;</span>\\n            <span class=\"token comment\">// &#x7531;&#x4E8E;&#x4E0A;&#x65B9;&#x5DF2;&#x7ECF;&#x5C06;&#x4EFB;&#x52A1;&#x6DFB;&#x52A0;&#x5230;&#x963B;&#x585E;&#x961F;&#x5217;&#x4E86;,&#x90A3;&#x4E48;&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;&#x7A7A;&#x7EBF;&#x7A0B;&#x540E;&#x8BE5;&#x4EFB;&#x52A1;&#x4F1A;&#x88AB;&#x7ACB;&#x523B;&#x4F7F;&#x7528;</span>\\n            <span class=\"token comment\">// &#x5728;&#x8BBE;&#x7F6E;&#x4E86;&#x7A7A;&#x95F2;&#x6838;&#x5FC3;&#x7EBF;&#x7A0B;&#x5B58;&#x6D3B;&#x65F6;&#x95F4;&#x65F6;,&#x9700;&#x8981;&#x8FD9;&#x4E48;&#x505A;</span>\\n            <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">workerCountOf</span><span class=\"token punctuation\">(</span>recheck<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\\n                <span class=\"token function\">addWorker</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\\n        <span class=\"token punctuation\">}</span>\\n        <span class=\"token comment\">// &#x963B;&#x585E;&#x961F;&#x5217;&#x5DF2;&#x6EE1;,&#x5219;&#x9700;&#x8981;&#x589E;&#x5927;&#x6B63;&#x5728;&#x6267;&#x884C;&#x7684;&#x7EBF;&#x7A0B;&#x6C60;</span>\\n        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">addWorker</span><span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\\n            <span class=\"token comment\">// &#x5931;&#x8D25;&#x7684;&#x8BDD;&#x6267;&#x884C;&#x62D2;&#x7EDD;&#x7B56;&#x7565;,&#x6B64;&#x65F6;&#x7EBF;&#x7A0B;&#x6C60;&#x5DF2;&#x6EE1;&#x6216;&#x7EBF;&#x7A0B;&#x6C60;terminating</span>\\n            <span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\\n    <span class=\"token punctuation\">}</span>\\n</pre><h3 class=\"mume-header\" id=\"shutdown-1\">shutdown()</h3>\\n\\n<ul>\\n<li><code>public void shutdown()</code></li>\\n<li>&#x5C06;&#x7EBF;&#x7A0B;&#x6C60;&#x72B6;&#x6001;&#x53D8;&#x4E3A;SHUTDOWN,&#x4E2D;&#x65AD;&#x7A7A;&#x95F2;worker,&#x6267;&#x884C;<code>tryTerminate()</code></li>\\n</ul>\\n<h3 class=\"mume-header\" id=\"shutdownnow\">shutdownNow()</h3>\\n\\n<ul>\\n<li><code>public List&lt;Runnable&gt; shutdownNow()</code></li>\\n<li>&#x5C06;&#x7EBF;&#x7A0B;&#x6C60;&#x72B6;&#x6001;&#x53D8;&#x4E3A;STOP,&#x4E2D;&#x65AD;&#x6240;&#x6709;worker,&#x6267;&#x884C;<code>tryTerminate()</code>,&#x5C06;&#x963B;&#x585E;&#x961F;&#x5217;&#x4E2D;&#x7684;&#x4EFB;&#x52A1;&#x8FD4;&#x56DE;</li>\\n</ul>\\n<h3 class=\"mume-header\" id=\"isshutdown\">isShutdown()</h3>\\n\\n<ul>\\n<li><code>public boolean isShutdown()</code></li>\\n<li>&#x72B6;&#x6001;&#x4E3A;RUNNING&#x662F;&#x8FD4;&#x56DE;true,&#x5426;&#x5219;&#x8FD4;&#x56DE;false</li>\\n</ul>\\n<h3 class=\"mume-header\" id=\"isterminating\">isTerminating()</h3>\\n\\n<ul>\\n<li><code>public boolean isTerminating()</code></li>\\n<li>&#x72B6;&#x6001;&#x4E3A;RUNNING&#x6216;TERMINATED&#x65F6;&#x8FD4;&#x56DE;false,&#x5426;&#x5219;&#x8FD4;&#x56DE;true</li>\\n</ul>\\n<h3 class=\"mume-header\" id=\"isterminated\">isTerminated()</h3>\\n\\n<ul>\\n<li><code>public boolean isTerminated()</code></li>\\n<li>&#x72B6;&#x6001;&#x4E3A;TERMINATED&#x65F6;&#x8FD4;&#x56DE;true,&#x5426;&#x5219;&#x8FD4;&#x56DE;false</li>\\n</ul>\\n<h3 class=\"mume-header\" id=\"awaitterminationlong-timeunit\">awaitTermination(long, TimeUnit)</h3>\\n\\n<ul>\\n<li><code>public boolean awaitTermination(long timeout, TimeUnit unit)</code></li>\\n<li>&#x7B49;&#x5F85;&#x76F4;&#x5230;&#x7EBF;&#x7A0B;&#x6C60;&#x72B6;&#x6001;&#x53D8;&#x4E3A;TERMINATED&#x6216;&#x8D85;&#x65F6;</li>\\n</ul>\\n<h3 class=\"mume-header\" id=\"prestartcorethread\">prestartCoreThread()</h3>\\n\\n<ul>\\n<li><code>public boolean prestartCoreThread()</code></li>\\n<li>&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x6838;&#x5FC3;&#x7EBF;&#x7A0B;,&#x6210;&#x529F;&#x8FD4;&#x56DE;true;</li>\\n<li>&#x5982;&#x679C;&#x5F53;&#x524D;&#x6838;&#x5FC3;&#x7EBF;&#x7A0B;&#x6570;&#x5927;&#x4E8E;&#x7B49;&#x4E8E;<code>corePoolSize</code>,&#x90A3;&#x4E48;&#x8FD4;&#x56DE;false&#x5E76;&#x4E0D;&#x4F1A;&#x521B;&#x5EFA;&#x7EBF;&#x7A0B;</li>\\n<li>&#x521B;&#x5EFA;&#x7684;&#x7A7A;&#x7EBF;&#x7A0B;&#x7528;&#x4E8E;&#x95F2;&#x7F6E;&#x5E76;&#x7B49;&#x5F85;&#x65B0;&#x7684;&#x4EFB;&#x52A1;</li>\\n</ul>\\n<h3 class=\"mume-header\" id=\"prestartallcorethreads\">prestartAllCoreThreads()</h3>\\n\\n<ul>\\n<li><code>public int prestartAllCoreThreads()</code></li>\\n<li>&#x542F;&#x52A8;&#x6240;&#x6709;&#x7684;&#x6838;&#x5FC3;&#x7EBF;&#x7A0B;</li>\\n<li>&#x8FD4;&#x56DE;&#x8BE5;&#x65B9;&#x6CD5;&#x542F;&#x52A8;&#x7684;&#x6838;&#x5FC3;&#x7EBF;&#x7A0B;&#x6570;</li>\\n</ul>\\n<h3 class=\"mume-header\" id=\"removerunnable\">remove(Runnable)</h3>\\n\\n<ul>\\n<li><code>public boolean remove(Runnable task)</code></li>\\n<li>&#x5C06;&#x6307;&#x5B9A;&#x4EFB;&#x52A1;&#x4ECE;&#x963B;&#x585E;&#x961F;&#x5217;&#x4E2D;&#x79FB;&#x9664;,&#x5E76;&#x8C03;&#x7528;<code>tryTerminate()</code></li>\\n<li>&#x6210;&#x529F;&#x8FD4;&#x56DE;true,&#x5931;&#x8D25;&#x8FD4;&#x56DE;false</li>\\n</ul>\\n<h3 class=\"mume-header\" id=\"purge\">purge()</h3>\\n\\n<ul>\\n<li><code>public void purge()</code></li>\\n<li>&#x5C06;&#x963B;&#x585E;&#x961F;&#x5217;&#x4E2D;&#x6240;&#x6709;&#x7684;&#x7C7B;&#x578B;&#x4E3A;<code>Future</code>&#x7684;,&#x5DF2;&#x7ECF;&#x88AB;&#x53D6;&#x6D88;&#x4E86;&#x7684;&#x7EBF;&#x7A0B;&#x79FB;&#x9664;</li>\\n</ul>\\n<h3 class=\"mume-header\" id=\"getpoolsize\">getPoolSize()</h3>\\n\\n<ul>\\n<li><code>public int getPoolSize()</code></li>\\n<li>&#x83B7;&#x53D6;&#x5F53;&#x524D;&#x6C60;&#x4E2D;&#x5B58;&#x6D3B;&#x7684;worker&#x7684;&#x6570;&#x91CF;</li>\\n<li>&#x5982;&#x679C;&#x7EBF;&#x7A0B;&#x6C60;&#x72B6;&#x6001;&#x4E3A;TYDING&#x53CA;&#x4EE5;&#x4E0A;,&#x5219;&#x8FD4;&#x56DE;0</li>\\n</ul>\\n<h3 class=\"mume-header\" id=\"getactivecount\">getActiveCount()</h3>\\n\\n<ul>\\n<li><code>public int getActiveCount()</code></li>\\n<li>&#x83B7;&#x53D6;&#x5F53;&#x524D;&#x6C60;&#x4E2D;&#x6B63;&#x5728;&#x6267;&#x884C;&#x4EFB;&#x52A1;&#x7684;worker&#x6570;&#x91CF;</li>\\n<li>&#x5B9E;&#x9645;&#x4E0A;&#x904D;&#x5386;<code>workers</code>,&#x8C03;&#x7528;worker&#x7684;<code>isLocked()</code></li>\\n</ul>\\n<h3 class=\"mume-header\" id=\"gettaskcount\">getTaskCount()</h3>\\n\\n<ul>\\n<li><code>public long getTaskCount()</code></li>\\n<li>&#x83B7;&#x53D6;&#x7EBF;&#x7A0B;&#x6C60;&#x7684;&#x4EFB;&#x52A1;&#x603B;&#x6570;(&#x5DF2;&#x7ECF;&#x6267;&#x884C;&#x5B8C;&#x7684;,&#x6B63;&#x5728;&#x6267;&#x884C;&#x7684;,&#x672A;&#x6267;&#x884C;&#x7684;)</li>\\n<li>&#x516C;&#x5F0F;:&#x5DF2;&#x5B8C;&#x6210;&#x4EFB;&#x52A1;&#x6570;(<code>completedTaskCount</code>) + &#x6BCF;&#x4E2A;&#x6D3B;&#x8DC3;&#x7EBF;&#x7A0B;&#x7684;&#x5B8C;&#x6210;&#x4EFB;&#x52A1;&#x6570;(<code>completedTasks</code>) + (&#x5982;&#x679C;&#x8BE5;&#x6D3B;&#x8DC3;&#x7EBF;&#x7A0B;&#x6267;&#x884C;&#x5728;&#x6267;&#x884C;&#x4EFB;&#x52A1;,+1) + &#x963B;&#x585E;&#x961F;&#x5217;&#x4E2D;&#x7684;&#x4EFB;&#x52A1;&#x6570;</li>\\n</ul>\\n<h3 class=\"mume-header\" id=\"getcompletedtaskcount\">getCompletedTaskCount()</h3>\\n\\n<ul>\\n<li><code>public long getCompletedTaskCount()</code></li>\\n<li>&#x83B7;&#x53D6;&#x7EBF;&#x7A0B;&#x6C60;&#x7684;&#x5DF2;&#x5B8C;&#x6210;&#x7684;&#x4EFB;&#x52A1;&#x603B;&#x6570;</li>\\n<li>&#x516C;&#x5F0F;:&#x5DF2;&#x5B8C;&#x6210;&#x4EFB;&#x52A1;&#x6570;(<code>completedTaskCount</code>) + &#x6BCF;&#x4E2A;&#x6D3B;&#x8DC3;&#x7EBF;&#x7A0B;&#x7684;&#x5B8C;&#x6210;&#x4EFB;&#x52A1;&#x6570;(<code>completedTasks</code>)</li>\\n</ul>\\n<h2 class=\"mume-header\" id=\"worker\">Worker</h2>\\n\\n<ul>\\n<li><code>private final class Worker extends AbstractQueuedSynchronizer implements Runnable{}</code></li>\\n</ul>\\n<h3 class=\"mume-header\" id=\"%E6%88%90%E5%91%98%E5%B1%9E%E6%80%A7\">&#x6210;&#x5458;&#x5C5E;&#x6027;</h3>\\n\\n<h4 class=\"mume-header\" id=\"thread\">thread</h4>\\n\\n<ul>\\n<li><code>final Thread thread</code>: &#x6267;&#x884C;&#x7684;&#x5B9E;&#x9645;&#x5B50;&#x7EBF;&#x7A0B;</li>\\n</ul>\\n<h4 class=\"mume-header\" id=\"firsttask\">firstTask</h4>\\n\\n<ul>\\n<li><code>Runnable firstTask</code>: &#x8981;&#x6267;&#x884C;&#x7684;&#x4EFB;&#x52A1;</li>\\n</ul>\\n<h4 class=\"mume-header\" id=\"completedtasks\">completedTasks</h4>\\n\\n<ul>\\n<li><code>volatile long completedTasks</code>: &#x5DF2;&#x5B8C;&#x6210;&#x7684;&#x4EFB;&#x52A1;&#x603B;&#x6570;</li>\\n</ul>\\n\\n      </div>\\n      <div class=\"md-sidebar-toc\"><ul>\\n<li><a href=\"#threadpoolexecutor\">ThreadPoolExecutor</a>\\n<ul>\\n<li><a href=\"#%E5%B1%9E%E6%80%A7\">&#x5C5E;&#x6027;</a>\\n<ul>\\n<li><a href=\"#ctl\">ctl</a></li>\\n<li><a href=\"#running\">RUNNING</a></li>\\n<li><a href=\"#shutdown\">SHUTDOWN</a></li>\\n<li><a href=\"#stop\">STOP</a></li>\\n<li><a href=\"#tidying\">TIDYING</a></li>\\n<li><a href=\"#terminated\">TERMINATED</a></li>\\n<li><a href=\"#workqueue\">workQueue</a></li>\\n<li><a href=\"#mainlock\">mainLock</a></li>\\n<li><a href=\"#workers\">workers</a></li>\\n<li><a href=\"#termination\">termination</a></li>\\n<li><a href=\"#largestpoolsize\">largestPoolSize</a></li>\\n<li><a href=\"#completedtaskcount\">completedTaskCount</a></li>\\n<li><a href=\"#threadfactory\">threadFactory</a></li>\\n<li><a href=\"#handler\">handler</a></li>\\n<li><a href=\"#keepalivetime\">keepAliveTime</a></li>\\n<li><a href=\"#allowcorethreadtimeout\">allowCoreThreadTimeOut</a></li>\\n<li><a href=\"#corepoolsize\">corePoolSize</a></li>\\n<li><a href=\"#maximumpoolsize\">maximumPoolSize</a></li>\\n<li><a href=\"#defaulthandler\">defaultHandler</a></li>\\n</ul>\\n</li>\\n<li><a href=\"#%E6%96%B9%E6%B3%95\">&#x65B9;&#x6CD5;</a>\\n<ul>\\n<li><a href=\"#isrunningint\">isRunning(int)</a></li>\\n<li><a href=\"#advancerunstateint\">advanceRunState(int)</a></li>\\n<li><a href=\"#tryterminate\">tryTerminate()</a></li>\\n<li><a href=\"#interruptworkers\">interruptWorkers()</a></li>\\n<li><a href=\"#interruptidleworkersboolean\">interruptIdleWorkers(boolean)</a></li>\\n<li><a href=\"#isrunningorshutdownboolean\">isRunningOrShutdown(boolean)</a></li>\\n<li><a href=\"#addworkerrunnable-boolean\">addWorker(Runnable, boolean)</a></li>\\n<li><a href=\"#addworkerfailedwokrer\">addWorkerFailed(Wokrer)</a></li>\\n<li><a href=\"#runworkerworker\">runWorker(Worker)</a></li>\\n<li><a href=\"#%E6%9E%84%E9%80%A0%E5%99%A8\">&#x6784;&#x9020;&#x5668;</a></li>\\n<li><a href=\"#executerunnable\">execute(Runnable)</a></li>\\n<li><a href=\"#shutdown-1\">shutdown()</a></li>\\n<li><a href=\"#shutdownnow\">shutdownNow()</a></li>\\n<li><a href=\"#isshutdown\">isShutdown()</a></li>\\n<li><a href=\"#isterminating\">isTerminating()</a></li>\\n<li><a href=\"#isterminated\">isTerminated()</a></li>\\n<li><a href=\"#awaitterminationlong-timeunit\">awaitTermination(long, TimeUnit)</a></li>\\n<li><a href=\"#prestartcorethread\">prestartCoreThread()</a></li>\\n<li><a href=\"#prestartallcorethreads\">prestartAllCoreThreads()</a></li>\\n<li><a href=\"#removerunnable\">remove(Runnable)</a></li>\\n<li><a href=\"#purge\">purge()</a></li>\\n<li><a href=\"#getpoolsize\">getPoolSize()</a></li>\\n<li><a href=\"#getactivecount\">getActiveCount()</a></li>\\n<li><a href=\"#gettaskcount\">getTaskCount()</a></li>\\n<li><a href=\"#getcompletedtaskcount\">getCompletedTaskCount()</a></li>\\n</ul>\\n</li>\\n<li><a href=\"#worker\">Worker</a>\\n<ul>\\n<li><a href=\"#%E6%88%90%E5%91%98%E5%B1%9E%E6%80%A7\">&#x6210;&#x5458;&#x5C5E;&#x6027;</a>\\n<ul>\\n<li><a href=\"#thread\">thread</a></li>\\n<li><a href=\"#firsttask\">firstTask</a></li>\\n<li><a href=\"#completedtasks\">completedTasks</a></li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n</ul>\\n</div>\\n      <a id=\"sidebar-toc-btn\">&#x2261;</a>\\n'\r\nexport const topMsg = 'title: ThreadPoolExecutor\\nauthor: voidblank\\ntags: [java, java源码, JDK1.8, 后台]\\nhtml:\\n  embed_local_images: false\\n  embed_svg: true\\n  offline: false\\n  toc: true\\nprint_background: false\\nexport_on_save:\\n  html: true\\n'\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/assets/posts1/Java/2021-05-10-thread-pool-executor.js"],"sourceRoot":""}
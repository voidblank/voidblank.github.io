webpackJsonp([20],{Xgat:function(x,e,l){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),l.d(e,"modifyTime",function(){return i}),l.d(e,"s",function(){return n}),l.d(e,"topMsg",function(){return a});var i="2021-06-20 16:54:06",n='      <div class="mume markdown-preview  ">\n      <h1 class="mume-header" id="thread">thread</h1>\n\n<ul>\n<li><code>public class Thread implements Runnable{}</code></li>\n</ul>\n<h2 class="mume-header" id="%E6%88%90%E5%91%98%E5%8F%98%E9%87%8F">&#x6210;&#x5458;&#x53D8;&#x91CF;</h2>\n\n<h3 class="mume-header" id="name">name</h3>\n\n<ul>\n<li><code>private volatile String name;</code></li>\n<li>&#x7EBF;&#x7A0B;&#x7684;&#x540D;&#x5B57;</li>\n<li>&#x8BBE;&#x7F6E;:<code>public final synchronized void setName(String name)</code>\n<ul>\n<li>&#x5148;&#x5224;&#x65AD;&#x662F;&#x5426;&#x5141;&#x8BB8;&#x4FEE;&#x6539;,&#x518D;&#x5224;&#x65AD;<code>threadStatus</code>&#x662F;&#x5426;&#x4E3A;0</li>\n</ul>\n</li>\n<li>&#x83B7;&#x53D6;:<code>public final String getName()</code></li>\n</ul>\n<h3 class="mume-header" id="priority">priority</h3>\n\n<ul>\n<li><code>private int priority;</code></li>\n<li>&#x7EBF;&#x7A0B;&#x7684;&#x4F18;&#x5148;&#x7EA7;,&#x8303;&#x56F4;&#x4E3A;1-10&#x7684;&#x6574;&#x6570;</li>\n<li>&#x8D85;&#x51FA;&#x8303;&#x56F4;&#x4F1A;&#x629B;&#x51FA;<code>IllegalArgumentException</code></li>\n<li>&#x9ED8;&#x8BA4;&#x4E3A;5</li>\n<li>&#x8BBE;&#x7F6E;&#x4F18;&#x5148;&#x7EA7;:<code>public final void setPriority(int newPriority)</code></li>\n<li>&#x83B7;&#x53D6;&#x4F18;&#x5148;&#x7EA7;:<code>public final int getPriority()</code></li>\n</ul>\n<h3 class="mume-header" id="threadq">threadQ</h3>\n\n<ul>\n<li><code>private Thread threadQ;</code></li>\n<li>&#x6CA1;&#x6709;&#x627E;&#x5230;&#x4F5C;&#x7528;,&#x4EE3;&#x7801;&#x4E2D;&#x4E5F;&#x6CA1;&#x6709;&#x4F7F;&#x7528;&#x5230;</li>\n</ul>\n<h3 class="mume-header" id="eetop">eetop</h3>\n\n<ul>\n<li><code>private long eetop;</code></li>\n<li>JVM&#x4E2D;&#x7684;JavaThread&#x6307;&#x9488;</li>\n</ul>\n<h3 class="mume-header" id="single_step">single_step</h3>\n\n<ul>\n<li><code>private boolean single_step;</code></li>\n<li>&#x662F;&#x5426;&#x4E3A;&#x5355;&#x6B65;&#x6267;&#x884C;</li>\n</ul>\n<h3 class="mume-header" id="daemon">daemon</h3>\n\n<ul>\n<li><code>private boolean daemon = false;</code></li>\n<li>&#x5224;&#x65AD;&#x5F53;&#x524D;&#x7EBF;&#x7A0B;&#x662F;&#x5426;&#x4E3A;&#x5B88;&#x62A4;&#x7EBF;&#x7A0B;,&#x9ED8;&#x8BA4;&#x4E3A;&#x975E;</li>\n<li>&#x5B88;&#x62A4;&#x7EBF;&#x7A0B;&#x76F8;&#x5BF9;&#x4E8E;&#x4E00;&#x822C;&#x7684;&#x7528;&#x6237;&#x7EBF;&#x7A0B;,&#x5177;&#x6709;&#x4F4E;&#x4F18;&#x5148;&#x7EA7;,&#x5F53;&#x6240;&#x6709;&#x7684;&#x7528;&#x6237;&#x7EBF;&#x7A0B;&#x90FD;&#x9000;&#x51FA;&#x540E;,JVM&#x5373;&#x505C;&#x6B62;&#x5DE5;&#x4F5C;,&#x6B64;&#x65F6;&#x5B88;&#x62A4;&#x7EBF;&#x7A0B;&#x4F1A;&#x76F4;&#x63A5;&#x9000;&#x51FA;</li>\n<li>&#x5E38;&#x89C1;&#x7684;&#x5B88;&#x62A4;&#x7EBF;&#x7A0B;&#x4E3A;gc&#x7EBF;&#x7A0B;</li>\n<li>&#x4E00;&#x4E2A;&#x5B88;&#x62A4;&#x7EBF;&#x7A0B;&#x7684;&#x5B50;&#x7EBF;&#x7A0B;&#x4E5F;&#x662F;&#x5B88;&#x62A4;&#x7EBF;&#x7A0B;</li>\n<li>&#x5C06;&#x4E00;&#x4E2A;thread&#x8BBE;&#x7F6E;&#x4E3A;&#x5B88;&#x62A4;&#x7EBF;&#x7A0B;&#x9700;&#x8981;&#x5728;&#x5176;&#x6267;&#x884C;<code>run()</code>&#x4E4B;&#x524D;&#x8FDB;&#x884C;,&#x5426;&#x5219;&#x5C06;&#x629B;&#x51FA;<code>IllegalThreadStateException</code></li>\n<li>&#x8BBE;&#x7F6E;:<code>public final void setDaemon(boolean on)</code></li>\n<li>&#x83B7;&#x53D6;:<code>public final boolean isDaemon()</code></li>\n</ul>\n<h3 class="mume-header" id="stillborn">stillborn</h3>\n\n<ul>\n<li><code>private boolean stillborn = false;</code></li>\n<li>JVM&#x72B6;&#x6001;,&#x5224;&#x65AD;&#x5F53;&#x524D;&#x7EBF;&#x7A0B;&#x662F;&#x5426;&#x5B58;&#x6D3B;</li>\n</ul>\n<h3 class="mume-header" id="target">target</h3>\n\n<ul>\n<li><code>private Runnable target;</code></li>\n<li><code>run()</code>&#x7684;&#x5185;&#x5BB9;</li>\n</ul>\n<h3 class="mume-header" id="group">group</h3>\n\n<ul>\n<li><code>private ThreadGroup group;</code></li>\n<li>&#x7EBF;&#x7A0B;&#x7EC4;,&#x7EBF;&#x7A0B;&#x96C6;&#x5408;</li>\n<li>&#x83B7;&#x53D6;:<code>public final ThreadGroup getThreadGroup()</code></li>\n</ul>\n<h3 class="mume-header" id="contextclassloader">contextClassLoader</h3>\n\n<ul>\n<li><code>private ClassLoader contextClassLoader;</code></li>\n<li>&#x8BE5;&#x7EBF;&#x7A0B;&#x7684;&#x4E0A;&#x4E0B;&#x6587;&#x7C7B;&#x52A0;&#x8F7D;&#x5668;</li>\n<li>&#x83B7;&#x53D6;:<code>public ClassLoader getContextClassLoader()</code></li>\n<li>&#x8BBE;&#x7F6E;:<code>public void setContextClassLoader(ClassLoader cl)</code></li>\n</ul>\n<h3 class="mume-header" id="inheritedaccesscontrolcontext">inheritedAccessControlContext</h3>\n\n<ul>\n<li><code>private AccessControlContext inheritedAccessControlContext;</code></li>\n<li>&#x5F53;&#x524D;&#x7EBF;&#x7A0B;&#x7EE7;&#x627F;&#x7684;&#x6743;&#x9650;&#x63A7;&#x5236;&#x4E0A;&#x4E0B;&#x6587;,&#x548C;&#x5B89;&#x5168;&#x673A;&#x5236;&#x76F8;&#x5173;</li>\n</ul>\n<h3 class="mume-header" id="threadinitnumber">threadInitNumber</h3>\n\n<ul>\n<li><code>private static int threadInitNumber;</code></li>\n<li>&#x7528;&#x4E8E;&#x81EA;&#x52A8;&#x7F16;&#x53F7;&#x533F;&#x540D;&#x7EBF;&#x7A0B;,&#x901A;&#x8FC7;&#x8C03;&#x7528;<code>nextThreadNum()</code>&#x6765;&#x9012;&#x589E;</li>\n<li>&#x6BCF;&#x5F53;&#x65B0;&#x5EFA;&#x4E00;&#x4E2A;Thread&#x5B9E;&#x4F8B;&#x65F6;,&#x5C31;&#x4F1A;&#x8C03;&#x7528;&#x4E00;&#x6B21;<code>nextThreadNum()</code>&#x65B9;&#x6CD5;</li>\n</ul>\n<h3 class="mume-header" id="threadlocals">threadLocals</h3>\n\n<ul>\n<li><code>ThreadLocal.ThreadLocalMap threadLocals = null;</code></li>\n<li>&#x5F53;&#x524D;&#x7EBF;&#x7A0B;&#x76F8;&#x5173;&#x7684;ThreadLocal&#x503C;</li>\n</ul>\n<h3 class="mume-header" id="inheritablethreadlocals">inheritableThreadLocals</h3>\n\n<ul>\n<li><code>ThreadLocal.ThreadLocalMap inheritableThreadLocals = null;</code></li>\n<li>&#x4E0E;&#x5F53;&#x524D;&#x7EBF;&#x7A0B;&#x6709;&#x5173;&#x7EE7;&#x627F;&#x8FC7;&#x6765;&#x7684;&#x672C;&#x5730;&#x53D8;&#x91CF;&#x503C;,&#x7531;InheritableThreadLocal&#x7EF4;&#x62A4;</li>\n</ul>\n<h3 class="mume-header" id="stacksize">stackSize</h3>\n\n<ul>\n<li><code>private long stackSize;</code></li>\n<li>&#x7EBF;&#x7A0B;&#x7684;&#x6808;&#x5927;&#x5C0F;,&#x9ED8;&#x8BA4;&#x4E3A;0,&#x53D6;&#x51B3;&#x4E8E;&#x865A;&#x62DF;&#x673A;,&#x90E8;&#x5206;&#x865A;&#x62DF;&#x673A;&#x4F1A;&#x5FFD;&#x7565;&#x8BE5;&#x5C5E;&#x6027;</li>\n</ul>\n<h3 class="mume-header" id="nativeparkeventpointer">nativeParkEventPointer</h3>\n\n<ul>\n<li><code>private long nativeParkEventPointer;</code></li>\n<li>&#x5728;&#x672C;&#x5730;&#x7EBF;&#x7A0B;&#x7EC8;&#x6B62;&#x4E4B;&#x540E;&#x4FDD;&#x7559;jvm&#x79C1;&#x6709;&#x72B6;&#x6001;(?)</li>\n</ul>\n<h3 class="mume-header" id="tid">tid</h3>\n\n<ul>\n<li><code>private long tid;</code></li>\n<li>&#x7EBF;&#x7A0B;id,&#x5728;&#x7EBF;&#x7A0B;&#x6267;&#x884C;&#x7684;&#x65F6;&#x5019;&#x8BBE;&#x5B9A;,&#x503C;&#x4E3A;threadSeqNumber</li>\n<li>&#x83B7;&#x53D6;:<code>public long getId()</code></li>\n</ul>\n<h3 class="mume-header" id="threadseqnumber">threadSeqNumber</h3>\n\n<ul>\n<li><code>private static long threadSeqNumber;</code></li>\n<li>&#x7528;&#x4E8E;&#x751F;&#x6210;&#x7EBF;&#x7A0B;id</li>\n</ul>\n<h3 class="mume-header" id="threadstatus">threadStatus</h3>\n\n<ul>\n<li><code>private volatile int threadStatus = 0;</code></li>\n<li>&#x7EBF;&#x7A0B;&#x72B6;&#x6001;,&#x9ED8;&#x8BA4;&#x4E3A;0&#x8868;&#x793A;&#x672A;&#x542F;&#x52A8;</li>\n<li><code>start()</code>&#x4E2D;&#x4E5F;&#x6709;&#x901A;&#x8FC7;&#x5224;&#x65AD;&#x8BE5;&#x503C;&#x662F;&#x5426;&#x4E3A;0&#x6765;&#x5224;&#x65AD;&#x7EBF;&#x7A0B;&#x662F;&#x5426;&#x5728;&#x6267;&#x884C;,&#x901A;&#x8FC7;&#x865A;&#x62DF;&#x673A;&#x4FEE;&#x6539;</li>\n</ul>\n<h3 class="mume-header" id="parkblocker">parkBlocker</h3>\n\n<ul>\n<li><code>volatile Object parkBlocker;</code></li>\n<li>&#x8BE5;&#x53C2;&#x6570;&#x652F;&#x6301;&#x5F53;&#x524D;&#x7EBF;&#x7A0B;&#x8C03;&#x7528;java.util.concurrent.locks.LockSupport.park;</li>\n<li>&#x7531;(private) java.util.concurrent.locks.LockSupport.setBlocker&#x8BBE;&#x7F6E;;</li>\n<li>&#x901A;&#x8FC7;java.util.concurrent.locks.LockSupport.getBlocker&#x8BBF;&#x95EE;</li>\n</ul>\n<h3 class="mume-header" id="blocker">blocker</h3>\n\n<ul>\n<li><code>private volatile Interruptible blocker;</code></li>\n<li>&#x8BE5;&#x5BF9;&#x8C61;&#x5728;&#x53EF;&#x4E2D;&#x65AD;&#x7684;I/O&#x64CD;&#x4F5C;&#x4E2D;&#x963B;&#x585E;&#x7684;&#x7EBF;&#x7A0B;&#x4E2D;;</li>\n<li>&#x5728;&#x8BBE;&#x7F6E;&#x6B64;&#x7EBF;&#x7A0B;&#x7684;&#x4E2D;&#x65AD;&#x72B6;&#x6001;&#x540E;&#xFF0C;&#x5E94;&#x8C03;&#x7528;&#x963B;&#x585E;&#x7A0B;&#x5E8F;&#x7684;&#x4E2D;&#x65AD;&#x65B9;&#x6CD5;&#x3002;</li>\n</ul>\n<h3 class="mume-header" id="blockerlock">blockerLock</h3>\n\n<ul>\n<li><code>private final Object blockerLock = new Object();</code></li>\n<li>&#x8BBE;&#x7F6E;blocker&#x7684;&#x5BF9;&#x8C61;&#x9501;</li>\n</ul>\n<h2 class="mume-header" id="%E6%96%B9%E6%B3%95">&#x65B9;&#x6CD5;</h2>\n\n<h3 class="mume-header" id="currentthread">currentThread()</h3>\n\n<ul>\n<li><code>public static native Thread currentThread();</code></li>\n<li>&#x83B7;&#x53D6;&#x5F53;&#x524D;&#x7EBF;&#x7A0B;</li>\n</ul>\n<h3 class="mume-header" id="yield">yield()</h3>\n\n<ul>\n<li><code>public static native void yield();</code></li>\n<li>&#x8C03;&#x7528;&#x540E;,&#x5F53;&#x524D;&#x7EBF;&#x7A0B;&#x53EF;&#x4EE5;&#x8BA9;&#x51FA;&#x5360;&#x7528;&#x7684;&#x5904;&#x7406;&#x5668;,&#x4F46;&#x53EF;&#x80FD;&#x4F1A;&#x88AB;&#x8C03;&#x5EA6;&#x5668;&#x5FFD;&#x7565;&#x3002;&#x5728;&#x591A;&#x7EBF;&#x7A0B;&#x7684;&#x60C5;&#x51B5;&#x4E0B;,&#x8BE5;&#x65B9;&#x6CD5;&#x53EF;&#x4EE5;&#x6709;&#x6548;&#x6539;&#x5584;&#x56E0;&#x7EBF;&#x7A0B;&#x95F4;&#x76F8;&#x4E92;&#x7ADE;&#x4E89;&#x5BFC;&#x81F4;&#x5355;&#x4E2A;&#x7EBF;&#x7A0B;&#x7B49;&#x5F85;&#x65F6;&#x95F4;&#x8FC7;&#x957F;&#x7684;&#x95EE;&#x9898;</li>\n</ul>\n<h3 class="mume-header" id="sleeplong">sleep(long)</h3>\n\n<ul>\n<li><code>public static native void sleep(long millis) throws InterruptedException;</code></li>\n<li>&#x8BA9;&#x5F53;&#x524D;&#x7EBF;&#x7A0B;&#x7761;&#x89C9;millis&#x6BEB;&#x79D2;,&#x82E5;&#x7EBF;&#x7A0B;&#x88AB;&#x4E2D;&#x65AD;&#x4F1A;&#x629B;&#x51FA;<code>InterruptedException</code>,&#x6B64;&#x65F6;&#x7EBF;&#x7A0B;&#x7684;&#x4E2D;&#x65AD;&#x72B6;&#x6001;&#x88AB;&#x6E05;&#x9664;</li>\n</ul>\n<h3 class="mume-header" id="sleeplong-int">sleep(long, int)</h3>\n\n<ul>\n<li><code>public static void sleep(long millis, int nanos) throws InterruptedException</code></li>\n<li>nanos&#x4E3A;&#x7EB3;&#x79D2;&#x503C;,&#x82E5;nanos&#x5927;&#x4E8E;&#x7B49;&#x4E8E;500000&#x6216;nanos&#x4E0D;&#x4E3A;&#x96F6;&#x7684;&#x60C5;&#x51B5;&#x4E0B;millis&#x4E3A;0,&#x5219;millis&#x52A0;&#x4E00;</li>\n<li>&#x4E4B;&#x540E;&#x6267;&#x884C;<code>sleep(millis)</code></li>\n</ul>\n<h3 class="mume-header" id="init">init()</h3>\n\n<ul>\n<li><code>private void init(ThreadGroup g, Runnable target, String name, long stackSize, AccessControlContext acc, boolean inheritThreadLocals)</code></li>\n<li>&#x7EBF;&#x7A0B;&#x521D;&#x59CB;&#x5316;&#x7684;&#x65B9;&#x6CD5;</li>\n<li>g:&#x7EBF;&#x7A0B;&#x7EC4;,&#x82E5;&#x672A;&#x63D0;&#x4F9B;&#x5219;&#x4ECE;&#x5B89;&#x5168;&#x7BA1;&#x7406;&#x5668;&#x4E2D;&#x83B7;&#x53D6;,&#x82E5;&#x83B7;&#x53D6;&#x4E0D;&#x5230;&#x5219;&#x4F7F;&#x7528;&#x7236;&#x7EBF;&#x7A0B;&#x7684;&#x7EBF;&#x7A0B;&#x7EC4;</li>\n<li>target:&#x8981;&#x6267;&#x884C;&#x7684;&#x4EFB;&#x52A1;</li>\n<li>name:&#x7EBF;&#x7A0B;&#x540D;,&#x672A;&#x8BBE;&#x5B9A;&#x5219;&#x662F;<code>Thread-threadInitNumber</code></li>\n<li>stackSize:&#x6808;&#x5927;&#x5C0F;</li>\n<li>acc:&#x88AB;&#x8BBE;&#x7F6E;&#x7ED9;inheritedAccessControlContext</li>\n<li>inheritThreadLocals:&#x4E3A;true&#x65F6;,&#x8BE5;&#x5BF9;&#x8C61;&#x7684;inheritableThreadLocals&#x5C06;&#x4ECE;&#x7236;&#x7EBF;&#x7A0B;&#x83B7;&#x53D6;</li>\n</ul>\n<h3 class="mume-header" id="clone">clone()</h3>\n\n<ul>\n<li><code>protected Object clone() throws CloneNotSupportedException</code></li>\n<li>&#x76F4;&#x63A5;&#x629B;&#x51FA;&#x5F02;&#x5E38;,thread&#x4E0D;&#x5141;&#x8BB8;&#x590D;&#x5236;,&#x53EA;&#x80FD;&#x518D;new&#x4E00;&#x4E2A;</li>\n</ul>\n<h3 class="mume-header" id="start">start()</h3>\n\n<ul>\n<li><code>public synchronized void start()</code></li>\n<li>&#x542F;&#x52A8;&#x7EBF;&#x7A0B;,&#x8FC7;&#x7A0B;&#x5982;&#x4E0B;:\n<ol>\n<li>&#x5224;&#x65AD;&#x5F53;&#x524D;&#x7EBF;&#x7A0B;&#x7684;threadStatus,&#x5982;&#x679C;&#x4E3A;0&#x5219;&#x8BF4;&#x660E;&#x672A;&#x8FD0;&#x884C;</li>\n<li>&#x5C06;&#x8BE5;Thread&#x5BF9;&#x8C61;&#x653E;&#x5165;group&#x4E2D;</li>\n<li>&#x8BBE;&#x7F6E;&#x5C40;&#x90E8;&#x53D8;&#x91CF;started&#x4E3A;false,&#x7528;&#x4E8E;&#x5224;&#x65AD;&#x4EFB;&#x52A1;&#x662F;&#x5426;&#x6B63;&#x786E;&#x5B8C;&#x6210;</li>\n<li>&#x6267;&#x884C;<code>start0()</code>&#x65B9;&#x6CD5;,native&#x65B9;&#x6CD5;,&#x6267;&#x884C;&#x4EFB;&#x52A1;</li>\n<li>&#x5982;&#x679C;started&#x6700;&#x7EC8;&#x4E3A;false,&#x8868;&#x793A;&#x4EFB;&#x52A1;&#x6267;&#x884C;&#x5931;&#x8D25;,&#x901A;&#x8FC7;group&#x7684;<code>threadStartFailed(thread)</code>&#x65B9;&#x6CD5;&#x5C06;&#x5176;&#x79FB;&#x9664;group</li>\n</ol>\n</li>\n</ul>\n<h3 class="mume-header" id="exit">exit()</h3>\n\n<ul>\n<li><code>private void exit()</code></li>\n<li>&#x9000;&#x51FA;&#x65B9;&#x6CD5;,&#x4F1A;&#x5C06;&#x5F53;&#x524D;Thread&#x4ECE;group&#x4E2D;&#x79FB;&#x9664;,&#x518D;&#x5C06;&#x76F8;&#x5173;&#x53D8;&#x91CF;&#x8BBE;&#x4E3A;null</li>\n</ul>\n<h3 class="mume-header" id="stop">stop()</h3>\n\n<ul>\n<li><code>public final void stop()</code></li>\n<li>&#x5F3A;&#x884C;&#x505C;&#x6B62;&#x8BE5;&#x4EFB;&#x52A1;</li>\n</ul>\n<h3 class="mume-header" id="interrupt">interrupt()</h3>\n\n<ul>\n<li><code>public void interrupt()</code></li>\n<li>&#x4F7F;&#x7528;synchronized&#x9501;&#x4F4F;<code>blockerLock</code>,&#x8FDB;&#x884C;&#x4E2D;&#x65AD;&#x64CD;&#x4F5C;</li>\n</ul>\n<h3 class="mume-header" id="interrupted">interrupted()</h3>\n\n<ul>\n<li><code>public static boolean interrupted()</code></li>\n<li>&#x68C0;&#x6D4B;&#x5F53;&#x524D;&#x7EBF;&#x7A0B;&#x662F;&#x5426;&#x5DF2;&#x7ECF;&#x88AB;&#x4E2D;&#x65AD;</li>\n</ul>\n<h3 class="mume-header" id="activecount">activeCount()</h3>\n\n<ul>\n<li><code>public static int activeCount()</code></li>\n<li>&#x83B7;&#x53D6;&#x5F53;&#x524D;&#x7EBF;&#x7A0B;&#x7684;&#x7EBF;&#x7A0B;&#x7EC4;&#x4E2D;&#x6D3B;&#x8DC3;&#x7684;&#x7EBF;&#x7A0B;&#x6570;&#x91CF;</li>\n</ul>\n<h3 class="mume-header" id="joinlong">join(long)</h3>\n\n<ul>\n<li><code>public final synchronized void join(long millis) throws InterruptedException</code></li>\n<li>&#x7B49;&#x5F85;&#x81F3;&#x591A;millis&#x6BEB;&#x79D2;,&#x76F4;&#x81F3;&#x8C03;&#x7528;&#x8BE5;&#x65B9;&#x6CD5;&#x7684;&#x7EBF;&#x7A0B;&#x7ED3;&#x675F;</li>\n<li>&#x5982;&#x679C;millis&#x4E3A;0,&#x5219;&#x4F1A;&#x4E00;&#x76F4;&#x7B49;&#x5F85;,&#x76F4;&#x81F3;&#x7ED3;&#x675F;</li>\n<li>&#x91CD;&#x8F7D;&#x65B9;&#x6CD5;<code>join()</code>&#x7B49;&#x4EF7;&#x4E8E;<code>join(0)</code></li>\n</ul>\n<h3 class="mume-header" id="checkaccess">checkAccess()</h3>\n\n<ul>\n<li><code>public final void checkAccess()</code></li>\n<li>Thread&#x4E2D;,&#x7528;&#x6765;&#x5224;&#x65AD;&#x5F53;&#x524D;&#x7EBF;&#x7A0B;&#x662F;&#x5426;&#x6709;&#x6743;&#x9650;&#x4FEE;&#x6539;&#x8C03;&#x7528;&#x7684;Thread</li>\n<li>&#x5982;&#x679C;&#x8C03;&#x7528;&#x7684;&#x7EBF;&#x7A0B;&#x7684;&#x7EBF;&#x7A0B;&#x7EC4;&#x662F;<code>rootGroup</code>&#xFF0C;&#x5219;&#x4F1A;&#x8FDB;&#x884C;&#x5224;&#x65AD;;</li>\n<li>&#x5982;&#x679C;&#x4E0D;&#x662F;,&#x90A3;&#x4E48;&#x76F4;&#x63A5;&#x8FD4;&#x56DE;</li>\n<li>&#x5F53;&#x6743;&#x9650;&#x4E0D;&#x8DB3;&#x65F6;,&#x4F1A;&#x629B;&#x51FA;<code>SecurityException</code>&#x5F02;&#x5E38;</li>\n</ul>\n<h2 class="mume-header" id="state">State</h2>\n\n<ul>\n<li><code>public enum State{}</code></li>\n<li>&#x7EBF;&#x7A0B;&#x72B6;&#x6001;&#x7684;&#x679A;&#x4E3E;&#x7C7B;</li>\n<li>&#x83B7;&#x53D6;&#x8C03;&#x7528;&#x7EBF;&#x7A0B;&#x7684;&#x72B6;&#x6001;:<code>public State getState()</code></li>\n</ul>\n<h3 class="mume-header" id="new">NEW</h3>\n\n<ul>\n<li>&#x7EBF;&#x7A0B;&#x521D;&#x59CB;&#x5316;,&#x7EBF;&#x7A0B;&#x8FD8;&#x672A;started</li>\n<li>threadStatus:0</li>\n</ul>\n<h3 class="mume-header" id="runnable">RUNNABLE</h3>\n\n<ul>\n<li>&#x7EBF;&#x7A0B;&#x6B63;&#x5728;&#x8FD0;&#x884C;,&#x8868;&#x793A;&#x8BE5;&#x7EBF;&#x7A0B;&#x518D;JVM&#x4E2D;&#x8FD0;&#x884C;&#x4F46;&#x662F;&#x53EF;&#x80FD;&#x5728;&#x7B49;&#x5F85;&#x5904;&#x7406;&#x5668;&#x8D44;&#x6E90;</li>\n<li>threadStatus:5</li>\n</ul>\n<h3 class="mume-header" id="blocked">BLOCKED</h3>\n\n<ul>\n<li>&#x6B63;&#x5728;&#x963B;&#x585E;&#x7684;,&#x7B49;&#x5F85;&#x76D1;&#x89C6;&#x5668;&#x9501;(monitor lock)&#x53BB;&#x8FDB;&#x5165;&#x4E00;&#x4E2A;&#x540C;&#x6B65;&#x4EE3;&#x7801;&#x5757;/&#x65B9;&#x6CD5;,&#x6216;&#x5728;&#x8C03;&#x7528;&#x540E;(calling)&#x518D;&#x6B21;&#x8FDB;&#x5165;(reenter)&#x540C;&#x6B65;&#x4EE3;&#x7801;&#x5757;/&#x65B9;&#x6CD5;</li>\n<li>threadStatus:1025</li>\n</ul>\n<h3 class="mume-header" id="waiting">WAITING</h3>\n\n<ul>\n<li>&#x8BE5;&#x7EBF;&#x7A0B;&#x6B63;&#x5728;&#x5904;&#x4E8E;&#x7B49;&#x5F85;&#x72B6;&#x6001;</li>\n<li>&#x7EBF;&#x7A0B;&#x8FDB;&#x5165;&#x8BE5;&#x72B6;&#x6001;&#x901A;&#x8FC7;&#x4EE5;&#x4E0B;&#x65B9;&#x6CD5;:\n<ul>\n<li><code>Object.wait()</code></li>\n<li><code>Thread.join()</code></li>\n<li><code>LockSupport.park(Object)</code></li>\n</ul>\n</li>\n<li>&#x5904;&#x4E8E;&#x8BE5;&#x72B6;&#x6001;&#x7684;&#x7EBF;&#x7A0B;&#x9700;&#x8981;&#x7B49;&#x5F85;&#x5176;&#x4ED6;&#x7EBF;&#x7A0B;&#x7684;<code>notify()</code>&#x6216;<code>notifyAll()</code>&#x7684;&#x5524;&#x9192;</li>\n<li>threadStatus:401</li>\n</ul>\n<h3 class="mume-header" id="timed_waiting">TIMED_WAITING</h3>\n\n<ul>\n<li>&#x8BE5;&#x7EBF;&#x7A0B;&#x6B63;&#x5728;&#x5904;&#x4E8E;&#x7B49;&#x5F85;&#x72B6;&#x6001;,&#x4F46;&#x662F;&#x4ED6;&#x6709;&#x7B49;&#x5F85;&#x65F6;&#x95F4;</li>\n<li>&#x7EBF;&#x7A0B;&#x8FDB;&#x5165;&#x8BE5;&#x72B6;&#x6001;&#x901A;&#x8FC7;&#x4EE5;&#x4E0B;&#x65B9;&#x6CD5;:\n<ul>\n<li><code>Thread.sleep(long)</code></li>\n<li><code>Object.wait(long)</code></li>\n<li><code>Thread.join(long)</code></li>\n<li><code>LockSupport.parkNanos(Object, long)</code></li>\n<li><code>LockSupport.parkUntil(Object, long)</code></li>\n</ul>\n</li>\n<li>&#x5904;&#x4E8E;&#x8BE5;&#x72B6;&#x6001;&#x7684;&#x7EBF;&#x7A0B;&#x5728;&#x8D85;&#x65F6;&#x540E;&#x4F1A;&#x81EA;&#x52A8;&#x7ED3;&#x675F;&#x8BE5;&#x72B6;&#x6001;</li>\n<li>threadStatus:417</li>\n</ul>\n<h3 class="mume-header" id="terminated">TERMINATED</h3>\n\n<ul>\n<li>&#x7EBF;&#x7A0B;&#x5DF2;&#x7ECF;&#x5B8C;&#x6210;&#x4EFB;&#x52A1;</li>\n<li>threadStatus:2</li>\n</ul>\n\n      </div>\n      <div class="md-sidebar-toc"><ul>\n<li><a href="#thread">thread</a>\n<ul>\n<li><a href="#%E6%88%90%E5%91%98%E5%8F%98%E9%87%8F">&#x6210;&#x5458;&#x53D8;&#x91CF;</a>\n<ul>\n<li><a href="#name">name</a></li>\n<li><a href="#priority">priority</a></li>\n<li><a href="#threadq">threadQ</a></li>\n<li><a href="#eetop">eetop</a></li>\n<li><a href="#single_step">single_step</a></li>\n<li><a href="#daemon">daemon</a></li>\n<li><a href="#stillborn">stillborn</a></li>\n<li><a href="#target">target</a></li>\n<li><a href="#group">group</a></li>\n<li><a href="#contextclassloader">contextClassLoader</a></li>\n<li><a href="#inheritedaccesscontrolcontext">inheritedAccessControlContext</a></li>\n<li><a href="#threadinitnumber">threadInitNumber</a></li>\n<li><a href="#threadlocals">threadLocals</a></li>\n<li><a href="#inheritablethreadlocals">inheritableThreadLocals</a></li>\n<li><a href="#stacksize">stackSize</a></li>\n<li><a href="#nativeparkeventpointer">nativeParkEventPointer</a></li>\n<li><a href="#tid">tid</a></li>\n<li><a href="#threadseqnumber">threadSeqNumber</a></li>\n<li><a href="#threadstatus">threadStatus</a></li>\n<li><a href="#parkblocker">parkBlocker</a></li>\n<li><a href="#blocker">blocker</a></li>\n<li><a href="#blockerlock">blockerLock</a></li>\n</ul>\n</li>\n<li><a href="#%E6%96%B9%E6%B3%95">&#x65B9;&#x6CD5;</a>\n<ul>\n<li><a href="#currentthread">currentThread()</a></li>\n<li><a href="#yield">yield()</a></li>\n<li><a href="#sleeplong">sleep(long)</a></li>\n<li><a href="#sleeplong-int">sleep(long, int)</a></li>\n<li><a href="#init">init()</a></li>\n<li><a href="#clone">clone()</a></li>\n<li><a href="#start">start()</a></li>\n<li><a href="#exit">exit()</a></li>\n<li><a href="#stop">stop()</a></li>\n<li><a href="#interrupt">interrupt()</a></li>\n<li><a href="#interrupted">interrupted()</a></li>\n<li><a href="#activecount">activeCount()</a></li>\n<li><a href="#joinlong">join(long)</a></li>\n<li><a href="#checkaccess">checkAccess()</a></li>\n</ul>\n</li>\n<li><a href="#state">State</a>\n<ul>\n<li><a href="#new">NEW</a></li>\n<li><a href="#runnable">RUNNABLE</a></li>\n<li><a href="#blocked">BLOCKED</a></li>\n<li><a href="#waiting">WAITING</a></li>\n<li><a href="#timed_waiting">TIMED_WAITING</a></li>\n<li><a href="#terminated">TERMINATED</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</div>\n      <a id="sidebar-toc-btn">&#x2261;</a>\n',a="title: Thread\nauthor: voidblank\ntags: [java, java源码, JDK1.8, 后台, 线程]\nhtml:\n  embed_local_images: false\n  embed_svg: true\n  offline: false\n  toc: true\nprint_background: false\nexport_on_save:\n  html: true\n"}});
//# sourceMappingURL=20.9c700abcae92049167bb.js.map